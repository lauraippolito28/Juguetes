CREATE DATABASE Tienda_Online;
USE Tienda_Online;
CREATE TABLE Producto (
    codigoBarras INT AUTO_INCREMENT PRIMARY KEY,
    nombreProducto VARCHAR(50),
    categoriaProducto VARCHAR(50),
    precioProducto DECIMAL(10, 2),
    cantidadProducto INT
);

CREATE TABLE Usuario (
    idUsuario INT AUTO_INCREMENT PRIMARY KEY,
    nombreUsuario VARCHAR(50),
    rolUsuario VARCHAR(50)
);

CREATE TABLE Cliente (
    idCliente INT AUTO_INCREMENT PRIMARY KEY,
    nombreCliente VARCHAR(50),
    fechaNacimiento DATE
);

CREATE TABLE Venta (
    idVenta INT AUTO_INCREMENT PRIMARY KEY,
    fechaVenta DATE,
    totalVenta DECIMAL(10, 2),
    idClienteFK INT,
    idUsuarioFK INT,
    
    CONSTRAINT FK_Cliente_Venta FOREIGN KEY (idClienteFK) REFERENCES Cliente(idCliente),
    CONSTRAINT FK_Usuario_Venta FOREIGN KEY (idUsuarioFK) REFERENCES Usuario(idUsuario)
);
CREATE TABLE DetalleVenta (
    idDetalleVenta INT AUTO_INCREMENT PRIMARY KEY,
    idVentaFK INT,
    idProductoFK INT,
    cantidad INT,
    precioUnitario DECIMAL(10, 2),

    CONSTRAINT FK_Venta_Detalle FOREIGN KEY (idVentaFK) REFERENCES Venta(idVenta),
    CONSTRAINT FK_Producto_Detalle FOREIGN KEY (idProductoFK) REFERENCES Producto(codigoBarras)
);
INSERT INTO Producto (nombreProducto, categoriaProducto, precioProducto, cantidadProducto)
VALUES
('Producto 1', 'Categoria 1', 10000, 5),
('Producto 2', 'Categoria 1', 18000, 3),
('Producto 3', 'Categoria 2', 25000, 1),
('Producto 4', 'Categoria 3', 50000, 2);
INSERT INTO Cliente (nombreCliente, fechaNacimiento)
VALUES
('Fantasm', '2002-05-13'),
('Hades', '2002-02-13'),
('Baswell', '2002-10-13'),
('Daniel', '2002-01-13');

INSERT INTO Usuario (nombreUsuario, rolUsuario)
VALUES
('Maluma Cajero', 'Cajero'),
('Anuel Administrador', 'Administrador'),
('Ozuna Secretario', 'Secretario'),
('Prince Ejecutivo', 'Ejecutivo');

INSERT INTO Venta (fechaVenta, totalVenta, idClienteFK, idUsuarioFK)
VALUES
('2024-05-10', 50000, 1, 1),
('2024-06-15', 30000, 2, 2),
('2024-07-20', 25000, 3, 3),
('2024-08-25', 18000, 4, 4);
INSERT INTO DetalleVenta (idVentaFK, idProductoFK, cantidad, precioUnitario)
VALUES
(1, 1, 2, 10000),
(2, 2, 1, 18000),
(3, 3, 1, 25000),
(4, 4, 1, 50000);


SELECT * FROM Producto;
SELECT * FROM Producto ORDER BY precioProducto ASC;

SELECT * FROM Cliente WHERE MONTH(fechaNacimiento) = 1;

SELECT * FROM Usuario WHERE rolUsuario = 'Cajero' OR rolUsuario = 'Secretario';

SELECT * FROM Venta WHERE MONTH(fechaVenta) BETWEEN 3 AND 6;

SELECT * FROM Producto WHERE nombreProducto LIKE '%r%';

SELECT * FROM Venta v
JOIN DetalleVenta dv ON v.idVenta = dv.idVentaFK
JOIN Producto p ON dv.idProductoFK = p.codigoBarras
WHERE p.precioProducto BETWEEN 15000 AND 30000;
   
SELECT * FROM Producto;
INSERT INTO Producto (nombreProducto, categoriaProducto, precioProducto, cantidadProducto)
VALUES
('Ropa de bebé', 'Categoria 1', 25000, 5);

SELECT * FROM Cliente;

ALTER TABLE Cliente 
ADD direccionCliente varchar(50);

ALTER TABLE Cliente
ADD telefonoCliente int(10);

INSERT INTO Cliente(idCliente, nombreCliente, fechaNacimiento)
	VALUES (55163118, 'Tatiana Cabrera', '1985-11-24' );

UPDATE Cliente 
SET fechaNacimiento = '1985-11-24', direccionCliente = 'Calle 104 #13-14', telefonoCliente = 3144606918
WHERE idCliente =55163118;

ALTER TABLE Venta
ADD productosComprados varchar(50);

SELECT * FROM Venta;
INSERT INTO VENTA (idVenta, fechaVenta, idClienteFK, idUsuarioFK, productosComprados)
VALUES ('5', '2024-09-27', 55163118, 2, 'Ropa de bebé');

delimiter //
create procedure registrarProducto(codigoBarras int, nombreProducto varchar(50), precioProducto decimal (10, 2), categoriaProdcuto varchar (50), cantidadProducto int )
begin
insert into producto values (codigoBarras, nombreProducto, precioProducto, categoriaProducto, cantidadProducto);
end //
delimiter ;
drop procedure registrarProducto;
call registrarProducto( 5, "Producto 5", "Categoria 3", 5750, 7)

select * from producto 

/*Procedimienos almacenados(Almacenar información en la base datos)

DELIMITER//
create prodecure nombre procedimiento(parametros);
begin
	L+ogica de la sentencia a utilizar
end

DELIMITER;
*/

/*Inactivar cliente*/
ALTER TABLE Cliente 
ADD activo BOOLEAN DEFAULT TRUE;
DELIMITER //
CREATE PROCEDURE InactivarCliente(IN clienteID INT)
BEGIN
    UPDATE Cliente 
    SET activo = FALSE
    WHERE idCliente = clienteID;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE consultarProductosComprados(IN clienteID INT)
BEGIN
    SELECT p.nombreProducto, v.idVenta, v.fechaVenta
    FROM Venta v
    JOIN DetalleVenta dv ON v.idVenta = dv.idVentaFK
    JOIN Producto p ON dv.idProductoFK = p.codigoBarras
    WHERE v.idClienteFK = clienteID;
END //
DELIMITER ;



DELIMITER //
CREATE PROCEDURE modificacionFechaNacimiento(IN clienteID INT, IN nuevaFecha DATE)
BEGIN
    UPDATE Cliente 
    SET fechaNacimiento = nuevaFecha
    WHERE idCliente = clienteID;
END //
DELIMITER ;

CREATE VIEW vistaClienteProducto AS
SELECT c.nombreCliente, p.nombreProducto, v.idVenta
FROM Venta v
JOIN DetalleVenta dv ON v.idVenta = dv.idVentaFK
JOIN Producto p ON dv.idProductoFK = p.codigoBarras
JOIN Cliente c ON v.idClienteFK = c.idCliente;



CREATE VIEW vistaCompras_Cliente AS
SELECT c.nombreCliente, COUNT(v.idVenta) AS totalCompras
FROM Venta v
JOIN Cliente c ON v.idClienteFK = c.idCliente
GROUP BY c.nombreCliente
ORDER BY totalCompras DESC
LIMIT 1;

/*Consultas dentro de otras consultas*/
/*select campo2, campo3 from tablanegra
where campo2 = (select columna2x from otra tabla where condicional)
*/

select * from producto

select nombreProducto, precioProducto (select avg(precioProducto)
 from Producto) as promedio
 from Producto;
 
 select nombreProducto, precioProducto (select avg(precioProducto)
 from Producto) as promedio
 from Producto;
 

